// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Users {
  id Int @id @default(autoincrement())
  login String @unique
  password String
  access_rights Access_rights[]
}

model Documents{
  id Int @id @default(autoincrement())
  name String
  docFile Bytes
  approval_date DateTime
  signing_date DateTime
  e_sign Bytes
  description String
  catalog documents_in_catalog[]
  first_related_document Related_document[] @relation("first")
  second_related_document Related_document[] @relation("second")
  access_rights Access_rights[]
}

model Access_rights{
id Int @id @default(autoincrement)
user Users @relation(fields: [user_id], references: [id])
user_id Int
document Documents @relation(fields: [document_id], references [id])
document_id Int
reading Boolean
changing Boolean
}

model Catalogs{
  id Int @id @default(autoincrement())
  name String @unique
  documents Documents_in_catalog[]
}

model Documents_in_catalog{
  id Int @id @default(autoincrement())
  catalog Catalogs @relation(fields: [catalog_id], references: [id])
  catalog_id Int
  document Documents @relation(fields: [document_id], references: [id])
  document_id Int
}

model Related_documents{
  id Int @id @default(autoincrement())
  first_document Documents @relation("first", fields: [first_document_id], references: [id])
  first_document_id Int
  second_document Documents @relation("second", fields: [second_document_id], references: [id])
  second_document_id Int
}
